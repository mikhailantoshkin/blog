<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="426" onload="init(evt)" viewBox="0 0 1200 426" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="426" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -p 42275 -o shnek.svg</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="415.00"> </text><svg id="frames" x="10" width="1180" total_samples="2933"><g><title>_bootstrap (threading.py:1032) (10 samples, 0.34%)</title><rect x="0.0341%" y="68" width="0.3409%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="10"/><text x="0.2841%" y="78.50"></text></g><g><title>_bootstrap_inner (threading.py:1075) (10 samples, 0.34%)</title><rect x="0.0341%" y="84" width="0.3409%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="10"/><text x="0.2841%" y="94.50"></text></g><g><title>run (threading.py:1012) (10 samples, 0.34%)</title><rect x="0.0341%" y="100" width="0.3409%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="10"/><text x="0.2841%" y="110.50"></text></g><g><title>_worker (concurrent/futures/thread.py:89) (10 samples, 0.34%)</title><rect x="0.0341%" y="116" width="0.3409%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="10"/><text x="0.2841%" y="126.50"></text></g><g><title>_run_once (asyncio/base_events.py:1917) (3 samples, 0.10%)</title><rect x="0.5796%" y="196" width="0.1023%" height="15" fill="rgb(208,68,35)" fg:x="17" fg:w="3"/><text x="0.8296%" y="206.50"></text></g><g><title>_run_once (asyncio/base_events.py:1935) (4 samples, 0.14%)</title><rect x="0.7501%" y="196" width="0.1364%" height="15" fill="rgb(232,128,0)" fg:x="22" fg:w="4"/><text x="1.0001%" y="206.50"></text></g><g><title>_run_once (asyncio/base_events.py:1948) (4 samples, 0.14%)</title><rect x="1.0910%" y="196" width="0.1364%" height="15" fill="rgb(207,160,47)" fg:x="32" fg:w="4"/><text x="1.3410%" y="206.50"></text></g><g><title>_process_events (asyncio/selector_events.py:757) (3 samples, 0.10%)</title><rect x="1.3979%" y="212" width="0.1023%" height="15" fill="rgb(228,23,34)" fg:x="41" fg:w="3"/><text x="1.6479%" y="222.50"></text></g><g><title>_run_once (asyncio/base_events.py:1949) (9 samples, 0.31%)</title><rect x="1.2274%" y="196" width="0.3069%" height="15" fill="rgb(218,30,26)" fg:x="36" fg:w="9"/><text x="1.4774%" y="206.50"></text></g><g><title>_run_once (asyncio/base_events.py:1970) (7 samples, 0.24%)</title><rect x="1.7729%" y="196" width="0.2387%" height="15" fill="rgb(220,122,19)" fg:x="52" fg:w="7"/><text x="2.0229%" y="206.50"></text></g><g><title>_run_once (asyncio/base_events.py:1971) (8 samples, 0.27%)</title><rect x="2.0116%" y="196" width="0.2728%" height="15" fill="rgb(250,228,42)" fg:x="59" fg:w="8"/><text x="2.2616%" y="206.50"></text></g><g><title>_flusher (nats/aio/client.py:2060) (8 samples, 0.27%)</title><rect x="4.0914%" y="228" width="0.2728%" height="15" fill="rgb(240,193,28)" fg:x="120" fg:w="8"/><text x="4.3414%" y="238.50"></text></g><g><title>get (asyncio/queues.py:154) (5 samples, 0.17%)</title><rect x="4.6028%" y="244" width="0.1705%" height="15" fill="rgb(216,20,37)" fg:x="135" fg:w="5"/><text x="4.8528%" y="254.50"></text></g><g><title>get (asyncio/queues.py:155) (13 samples, 0.44%)</title><rect x="4.7733%" y="244" width="0.4432%" height="15" fill="rgb(206,188,39)" fg:x="140" fg:w="13"/><text x="5.0233%" y="254.50"></text></g><g><title>create_future (asyncio/base_events.py:449) (8 samples, 0.27%)</title><rect x="4.9437%" y="260" width="0.2728%" height="15" fill="rgb(217,207,13)" fg:x="145" fg:w="8"/><text x="5.1937%" y="270.50"></text></g><g><title>get (asyncio/queues.py:158) (8 samples, 0.27%)</title><rect x="5.2847%" y="244" width="0.2728%" height="15" fill="rgb(231,73,38)" fg:x="155" fg:w="8"/><text x="5.5347%" y="254.50"></text></g><g><title>get_nowait (asyncio/queues.py:182) (4 samples, 0.14%)</title><rect x="5.6256%" y="260" width="0.1364%" height="15" fill="rgb(225,20,46)" fg:x="165" fg:w="4"/><text x="5.8756%" y="270.50"></text></g><g><title>_flusher (nats/aio/client.py:2063) (46 samples, 1.57%)</title><rect x="4.3641%" y="228" width="1.5684%" height="15" fill="rgb(210,31,41)" fg:x="128" fg:w="46"/><text x="4.6141%" y="238.50"></text></g><g><title>get (asyncio/queues.py:173) (11 samples, 0.38%)</title><rect x="5.5574%" y="244" width="0.3750%" height="15" fill="rgb(221,200,47)" fg:x="163" fg:w="11"/><text x="5.8074%" y="254.50"></text></g><g><title>get_nowait (asyncio/queues.py:183) (5 samples, 0.17%)</title><rect x="5.7620%" y="260" width="0.1705%" height="15" fill="rgb(226,26,5)" fg:x="169" fg:w="5"/><text x="6.0120%" y="270.50"></text></g><g><title>writelines (asyncio/selector_events.py:1181) (11 samples, 0.38%)</title><rect x="6.2393%" y="276" width="0.3750%" height="15" fill="rgb(249,33,26)" fg:x="183" fg:w="11"/><text x="6.4893%" y="286.50"></text></g><g><title>_write_sendmsg (asyncio/selector_events.py:1102) (360 samples, 12.27%)</title><rect x="6.6485%" y="292" width="12.2741%" height="15" fill="rgb(235,183,28)" fg:x="195" fg:w="360"/><text x="6.8985%" y="302.50">_write_sendmsg (as..</text></g><g><title>_get_sendmsg_buffer (asyncio/selector_events.py:1095) (4 samples, 0.14%)</title><rect x="18.7862%" y="308" width="0.1364%" height="15" fill="rgb(221,5,38)" fg:x="551" fg:w="4"/><text x="19.0362%" y="318.50"></text></g><g><title>_write_sendmsg (asyncio/selector_events.py:1103) (5 samples, 0.17%)</title><rect x="18.9226%" y="292" width="0.1705%" height="15" fill="rgb(247,18,42)" fg:x="555" fg:w="5"/><text x="19.1726%" y="302.50"></text></g><g><title>__getitem__ (selectors.py:71) (7 samples, 0.24%)</title><rect x="19.5022%" y="340" width="0.2387%" height="15" fill="rgb(241,131,45)" fg:x="572" fg:w="7"/><text x="19.7522%" y="350.50"></text></g><g><title>_fileobj_lookup (selectors.py:225) (6 samples, 0.20%)</title><rect x="19.5363%" y="356" width="0.2046%" height="15" fill="rgb(249,31,29)" fg:x="573" fg:w="6"/><text x="19.7863%" y="366.50"></text></g><g><title>_remove_writer (asyncio/selector_events.py:336) (19 samples, 0.65%)</title><rect x="19.2295%" y="308" width="0.6478%" height="15" fill="rgb(225,111,53)" fg:x="564" fg:w="19"/><text x="19.4795%" y="318.50"></text></g><g><title>get_key (selectors.py:190) (15 samples, 0.51%)</title><rect x="19.3658%" y="324" width="0.5114%" height="15" fill="rgb(238,160,17)" fg:x="568" fg:w="15"/><text x="19.6158%" y="334.50"></text></g><g><title>__getitem__ (selectors.py:72) (4 samples, 0.14%)</title><rect x="19.7409%" y="340" width="0.1364%" height="15" fill="rgb(214,148,48)" fg:x="579" fg:w="4"/><text x="19.9909%" y="350.50"></text></g><g><title>_remove_writer (asyncio/selector_events.py:340) (3 samples, 0.10%)</title><rect x="19.8773%" y="308" width="0.1023%" height="15" fill="rgb(232,36,49)" fg:x="583" fg:w="3"/><text x="20.1273%" y="318.50"></text></g><g><title>_remove_writer (asyncio/selector_events.py:342) (4 samples, 0.14%)</title><rect x="19.9795%" y="308" width="0.1364%" height="15" fill="rgb(209,103,24)" fg:x="586" fg:w="4"/><text x="20.2295%" y="318.50"></text></g><g><title>modify (selectors.py:377) (6 samples, 0.20%)</title><rect x="20.3887%" y="324" width="0.2046%" height="15" fill="rgb(229,88,8)" fg:x="598" fg:w="6"/><text x="20.6387%" y="334.50"></text></g><g><title>_fileobj_lookup (selectors.py:225) (3 samples, 0.10%)</title><rect x="20.4910%" y="340" width="0.1023%" height="15" fill="rgb(213,181,19)" fg:x="601" fg:w="3"/><text x="20.7410%" y="350.50"></text></g><g><title>_write_sendmsg (asyncio/selector_events.py:1117) (42 samples, 1.43%)</title><rect x="19.1954%" y="292" width="1.4320%" height="15" fill="rgb(254,191,54)" fg:x="563" fg:w="42"/><text x="19.4454%" y="302.50"></text></g><g><title>_remove_writer (asyncio/selector_events.py:346) (14 samples, 0.48%)</title><rect x="20.1500%" y="308" width="0.4773%" height="15" fill="rgb(241,83,37)" fg:x="591" fg:w="14"/><text x="20.4000%" y="318.50"></text></g><g><title>writelines (asyncio/selector_events.py:1182) (413 samples, 14.08%)</title><rect x="6.6144%" y="276" width="14.0811%" height="15" fill="rgb(233,36,39)" fg:x="194" fg:w="413"/><text x="6.8644%" y="286.50">writelines (asyncio/s..</text></g><g><title>_flusher (nats/aio/client.py:2067) (433 samples, 14.76%)</title><rect x="5.9666%" y="228" width="14.7630%" height="15" fill="rgb(226,3,54)" fg:x="175" fg:w="433"/><text x="6.2166%" y="238.50">_flusher (nats/aio/clie..</text></g><g><title>writelines (nats/aio/transport.py:167) (431 samples, 14.69%)</title><rect x="6.0348%" y="244" width="14.6949%" height="15" fill="rgb(245,192,40)" fg:x="177" fg:w="431"/><text x="6.2848%" y="254.50">writelines (nats/aio/t..</text></g><g><title>writelines (asyncio/streams.py:349) (430 samples, 14.66%)</title><rect x="6.0689%" y="260" width="14.6608%" height="15" fill="rgb(238,167,29)" fg:x="178" fg:w="430"/><text x="6.3189%" y="270.50">writelines (asyncio/st..</text></g><g><title>_flusher (nats/aio/client.py:2068) (4 samples, 0.14%)</title><rect x="20.7296%" y="228" width="0.1364%" height="15" fill="rgb(232,182,51)" fg:x="608" fg:w="4"/><text x="20.9796%" y="238.50"></text></g><g><title>_flusher (nats/aio/client.py:2070) (12 samples, 0.41%)</title><rect x="20.8660%" y="228" width="0.4091%" height="15" fill="rgb(231,60,39)" fg:x="612" fg:w="12"/><text x="21.1160%" y="238.50"></text></g><g><title>drain (nats/aio/transport.py:177) (10 samples, 0.34%)</title><rect x="20.9342%" y="244" width="0.3409%" height="15" fill="rgb(208,69,12)" fg:x="614" fg:w="10"/><text x="21.1842%" y="254.50"></text></g><g><title>drain (asyncio/streams.py:392) (4 samples, 0.14%)</title><rect x="21.1388%" y="260" width="0.1364%" height="15" fill="rgb(235,93,37)" fg:x="620" fg:w="4"/><text x="21.3888%" y="270.50"></text></g><g><title>_flusher (nats/aio/client.py:2079) (4 samples, 0.14%)</title><rect x="21.2751%" y="228" width="0.1364%" height="15" fill="rgb(213,116,39)" fg:x="624" fg:w="4"/><text x="21.5251%" y="238.50"></text></g><g><title>_read_ready__data_received (asyncio/selector_events.py:1013) (118 samples, 4.02%)</title><rect x="21.6502%" y="244" width="4.0232%" height="15" fill="rgb(222,207,29)" fg:x="635" fg:w="118"/><text x="21.9002%" y="254.50">_rea..</text></g><g><title>_call_soon (asyncio/base_events.py:815) (4 samples, 0.14%)</title><rect x="25.9461%" y="324" width="0.1364%" height="15" fill="rgb(206,96,30)" fg:x="761" fg:w="4"/><text x="26.1961%" y="334.50"></text></g><g><title>feed_data (asyncio/streams.py:506) (11 samples, 0.38%)</title><rect x="25.8098%" y="276" width="0.3750%" height="15" fill="rgb(218,138,4)" fg:x="757" fg:w="11"/><text x="26.0598%" y="286.50"></text></g><g><title>_wakeup_waiter (asyncio/streams.py:480) (11 samples, 0.38%)</title><rect x="25.8098%" y="292" width="0.3750%" height="15" fill="rgb(250,191,14)" fg:x="757" fg:w="11"/><text x="26.0598%" y="302.50"></text></g><g><title>call_soon (asyncio/base_events.py:799) (8 samples, 0.27%)</title><rect x="25.9120%" y="308" width="0.2728%" height="15" fill="rgb(239,60,40)" fg:x="760" fg:w="8"/><text x="26.1620%" y="318.50"></text></g><g><title>_call_soon (asyncio/base_events.py:818) (3 samples, 0.10%)</title><rect x="26.0825%" y="324" width="0.1023%" height="15" fill="rgb(206,27,48)" fg:x="765" fg:w="3"/><text x="26.3325%" y="334.50"></text></g><g><title>_read_ready (asyncio/selector_events.py:970) (144 samples, 4.91%)</title><rect x="21.4456%" y="228" width="4.9096%" height="15" fill="rgb(225,35,8)" fg:x="629" fg:w="144"/><text x="21.6956%" y="238.50">_read_..</text></g><g><title>_read_ready__data_received (asyncio/selector_events.py:1027) (20 samples, 0.68%)</title><rect x="25.6734%" y="244" width="0.6819%" height="15" fill="rgb(250,213,24)" fg:x="753" fg:w="20"/><text x="25.9234%" y="254.50"></text></g><g><title>data_received (asyncio/streams.py:287) (20 samples, 0.68%)</title><rect x="25.6734%" y="260" width="0.6819%" height="15" fill="rgb(247,123,22)" fg:x="753" fg:w="20"/><text x="25.9234%" y="270.50"></text></g><g><title>feed_data (asyncio/streams.py:510) (3 samples, 0.10%)</title><rect x="26.2530%" y="276" width="0.1023%" height="15" fill="rgb(231,138,38)" fg:x="770" fg:w="3"/><text x="26.5030%" y="286.50"></text></g><g><title>readuntil (asyncio/streams.py:631) (3 samples, 0.10%)</title><rect x="26.9349%" y="244" width="0.1023%" height="15" fill="rgb(231,145,46)" fg:x="790" fg:w="3"/><text x="27.1849%" y="254.50"></text></g><g><title>readuntil (asyncio/streams.py:636) (9 samples, 0.31%)</title><rect x="27.1054%" y="244" width="0.3069%" height="15" fill="rgb(251,118,11)" fg:x="795" fg:w="9"/><text x="27.3554%" y="254.50"></text></g><g><title>_wait_for_data (asyncio/streams.py:543) (8 samples, 0.27%)</title><rect x="27.6850%" y="260" width="0.2728%" height="15" fill="rgb(217,147,25)" fg:x="812" fg:w="8"/><text x="27.9350%" y="270.50"></text></g><g><title>create_future (asyncio/base_events.py:449) (6 samples, 0.20%)</title><rect x="27.7532%" y="276" width="0.2046%" height="15" fill="rgb(247,81,37)" fg:x="814" fg:w="6"/><text x="28.0032%" y="286.50"></text></g><g><title>readuntil (asyncio/streams.py:660) (22 samples, 0.75%)</title><rect x="27.4804%" y="244" width="0.7501%" height="15" fill="rgb(209,12,38)" fg:x="806" fg:w="22"/><text x="27.7304%" y="254.50"></text></g><g><title>_wait_for_data (asyncio/streams.py:545) (8 samples, 0.27%)</title><rect x="27.9577%" y="260" width="0.2728%" height="15" fill="rgb(227,1,9)" fg:x="820" fg:w="8"/><text x="28.2077%" y="270.50"></text></g><g><title>readuntil (asyncio/streams.py:666) (5 samples, 0.17%)</title><rect x="28.2305%" y="244" width="0.1705%" height="15" fill="rgb(248,47,43)" fg:x="828" fg:w="5"/><text x="28.4805%" y="254.50"></text></g><g><title>readuntil (asyncio/streams.py:667) (8 samples, 0.27%)</title><rect x="28.4010%" y="244" width="0.2728%" height="15" fill="rgb(221,10,30)" fg:x="833" fg:w="8"/><text x="28.6510%" y="254.50"></text></g><g><title>readuntil (asyncio/streams.py:668) (3 samples, 0.10%)</title><rect x="28.6737%" y="244" width="0.1023%" height="15" fill="rgb(210,229,1)" fg:x="841" fg:w="3"/><text x="28.9237%" y="254.50"></text></g><g><title>handler (shnek/main.py:31) (76 samples, 2.59%)</title><rect x="26.3894%" y="228" width="2.5912%" height="15" fill="rgb(222,148,37)" fg:x="774" fg:w="76"/><text x="26.6394%" y="238.50">ha..</text></g><g><title>readuntil (asyncio/streams.py:669) (6 samples, 0.20%)</title><rect x="28.7760%" y="244" width="0.2046%" height="15" fill="rgb(234,67,33)" fg:x="844" fg:w="6"/><text x="29.0260%" y="254.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:101) (4 samples, 0.14%)</title><rect x="29.7988%" y="244" width="0.1364%" height="15" fill="rgb(247,98,35)" fg:x="874" fg:w="4"/><text x="30.0488%" y="254.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:105) (18 samples, 0.61%)</title><rect x="29.9352%" y="244" width="0.6137%" height="15" fill="rgb(247,138,52)" fg:x="878" fg:w="18"/><text x="30.1852%" y="254.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:106) (3 samples, 0.10%)</title><rect x="30.5489%" y="244" width="0.1023%" height="15" fill="rgb(213,79,30)" fg:x="896" fg:w="3"/><text x="30.7989%" y="254.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:77) (4 samples, 0.14%)</title><rect x="30.6853%" y="244" width="0.1364%" height="15" fill="rgb(246,177,23)" fg:x="900" fg:w="4"/><text x="30.9353%" y="254.50"></text></g><g><title>parse (lark/parser_frontends.py:36) (4 samples, 0.14%)</title><rect x="31.1285%" y="292" width="0.1364%" height="15" fill="rgb(230,62,27)" fg:x="913" fg:w="4"/><text x="31.3785%" y="302.50"></text></g><g><title>lex (lark/parser_frontends.py:31) (3 samples, 0.10%)</title><rect x="31.1626%" y="308" width="0.1023%" height="15" fill="rgb(216,154,8)" fg:x="914" fg:w="3"/><text x="31.4126%" y="318.50"></text></g><g><title>parse (lark/parser_frontends.py:37) (5 samples, 0.17%)</title><rect x="31.2649%" y="292" width="0.1705%" height="15" fill="rgb(244,35,45)" fg:x="917" fg:w="5"/><text x="31.5149%" y="302.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:35) (3 samples, 0.10%)</title><rect x="32.1514%" y="308" width="0.1023%" height="15" fill="rgb(251,115,12)" fg:x="943" fg:w="3"/><text x="32.4014%" y="318.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:43) (13 samples, 0.44%)</title><rect x="32.3900%" y="308" width="0.4432%" height="15" fill="rgb(240,54,50)" fg:x="950" fg:w="13"/><text x="32.6400%" y="318.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:51) (4 samples, 0.14%)</title><rect x="32.8333%" y="308" width="0.1364%" height="15" fill="rgb(233,84,52)" fg:x="963" fg:w="4"/><text x="33.0833%" y="318.50"></text></g><g><title>lex (lark/lexer.py:334) (9 samples, 0.31%)</title><rect x="33.3447%" y="324" width="0.3069%" height="15" fill="rgb(207,117,47)" fg:x="978" fg:w="9"/><text x="33.5947%" y="334.50"></text></g><g><title>lex (lark/lexer.py:136) (5 samples, 0.17%)</title><rect x="34.4016%" y="340" width="0.1705%" height="15" fill="rgb(249,43,39)" fg:x="1009" fg:w="5"/><text x="34.6516%" y="350.50"></text></g><g><title>lex (lark/lexer.py:137) (3 samples, 0.10%)</title><rect x="34.5721%" y="340" width="0.1023%" height="15" fill="rgb(209,38,44)" fg:x="1014" fg:w="3"/><text x="34.8221%" y="350.50"></text></g><g><title>lex (lark/lexer.py:138) (3 samples, 0.10%)</title><rect x="34.6744%" y="340" width="0.1023%" height="15" fill="rgb(236,212,23)" fg:x="1017" fg:w="3"/><text x="34.9244%" y="350.50"></text></g><g><title>lex (lark/lexer.py:140) (13 samples, 0.44%)</title><rect x="34.7767%" y="340" width="0.4432%" height="15" fill="rgb(242,79,21)" fg:x="1020" fg:w="13"/><text x="35.0267%" y="350.50"></text></g><g><title>lex (lark/lexer.py:142) (32 samples, 1.09%)</title><rect x="35.2540%" y="340" width="1.0910%" height="15" fill="rgb(211,96,35)" fg:x="1034" fg:w="32"/><text x="35.5040%" y="350.50"></text></g><g><title>lex (lark/lexer.py:143) (128 samples, 4.36%)</title><rect x="36.3450%" y="340" width="4.3641%" height="15" fill="rgb(253,215,40)" fg:x="1066" fg:w="128"/><text x="36.5950%" y="350.50">lex (..</text></g><g><title>lex (lark/lexer.py:144) (6 samples, 0.20%)</title><rect x="40.7092%" y="340" width="0.2046%" height="15" fill="rgb(211,81,21)" fg:x="1194" fg:w="6"/><text x="40.9592%" y="350.50"></text></g><g><title>lex (lark/lexer.py:145) (3 samples, 0.10%)</title><rect x="40.9137%" y="340" width="0.1023%" height="15" fill="rgb(208,190,38)" fg:x="1200" fg:w="3"/><text x="41.1637%" y="350.50"></text></g><g><title>lex (lark/lexer.py:148) (43 samples, 1.47%)</title><rect x="41.0501%" y="340" width="1.4661%" height="15" fill="rgb(235,213,38)" fg:x="1204" fg:w="43"/><text x="41.3001%" y="350.50"></text></g><g><title>lex (lark/lexer.py:149) (35 samples, 1.19%)</title><rect x="42.5162%" y="340" width="1.1933%" height="15" fill="rgb(237,122,38)" fg:x="1247" fg:w="35"/><text x="42.7662%" y="350.50"></text></g><g><title>lex (lark/lexer.py:150) (14 samples, 0.48%)</title><rect x="43.7095%" y="340" width="0.4773%" height="15" fill="rgb(244,218,35)" fg:x="1282" fg:w="14"/><text x="43.9595%" y="350.50"></text></g><g><title>__new__ (lark/lexer.py:74) (9 samples, 0.31%)</title><rect x="46.1643%" y="356" width="0.3069%" height="15" fill="rgb(240,68,47)" fg:x="1354" fg:w="9"/><text x="46.4143%" y="366.50"></text></g><g><title>__new__ (lark/lexer.py:75) (84 samples, 2.86%)</title><rect x="46.4712%" y="356" width="2.8640%" height="15" fill="rgb(210,16,53)" fg:x="1363" fg:w="84"/><text x="46.7212%" y="366.50">__..</text></g><g><title>__new__ (lark/lexer.py:76) (7 samples, 0.24%)</title><rect x="49.3352%" y="356" width="0.2387%" height="15" fill="rgb(235,124,12)" fg:x="1447" fg:w="7"/><text x="49.5852%" y="366.50"></text></g><g><title>__new__ (lark/lexer.py:77) (4 samples, 0.14%)</title><rect x="49.5738%" y="356" width="0.1364%" height="15" fill="rgb(224,169,11)" fg:x="1454" fg:w="4"/><text x="49.8238%" y="366.50"></text></g><g><title>__new__ (lark/lexer.py:78) (4 samples, 0.14%)</title><rect x="49.7102%" y="356" width="0.1364%" height="15" fill="rgb(250,166,2)" fg:x="1458" fg:w="4"/><text x="49.9602%" y="366.50"></text></g><g><title>__new__ (lark/lexer.py:80) (5 samples, 0.17%)</title><rect x="49.9148%" y="356" width="0.1705%" height="15" fill="rgb(242,216,29)" fg:x="1464" fg:w="5"/><text x="50.1648%" y="366.50"></text></g><g><title>lex (lark/lexer.py:151) (177 samples, 6.03%)</title><rect x="44.1868%" y="340" width="6.0348%" height="15" fill="rgb(230,116,27)" fg:x="1296" fg:w="177"/><text x="44.4368%" y="350.50">lex (lar..</text></g><g><title>__new__ (lark/lexer.py:81) (4 samples, 0.14%)</title><rect x="50.0852%" y="356" width="0.1364%" height="15" fill="rgb(228,99,48)" fg:x="1469" fg:w="4"/><text x="50.3352%" y="366.50"></text></g><g><title>lex (lark/lexer.py:152) (23 samples, 0.78%)</title><rect x="50.2216%" y="340" width="0.7842%" height="15" fill="rgb(253,11,6)" fg:x="1473" fg:w="23"/><text x="50.4716%" y="350.50"></text></g><g><title>__call__ (lark/lexer.py:177) (10 samples, 0.34%)</title><rect x="51.5172%" y="356" width="0.3409%" height="15" fill="rgb(247,143,39)" fg:x="1511" fg:w="10"/><text x="51.7672%" y="366.50"></text></g><g><title>__call__ (lark/lexer.py:178) (10 samples, 0.34%)</title><rect x="51.8582%" y="356" width="0.3409%" height="15" fill="rgb(236,97,10)" fg:x="1521" fg:w="10"/><text x="52.1082%" y="366.50"></text></g><g><title>lex (lark/lexer.py:153) (37 samples, 1.26%)</title><rect x="51.0058%" y="340" width="1.2615%" height="15" fill="rgb(233,208,19)" fg:x="1496" fg:w="37"/><text x="51.2558%" y="350.50"></text></g><g><title>lex (lark/lexer.py:156) (3 samples, 0.10%)</title><rect x="52.2673%" y="340" width="0.1023%" height="15" fill="rgb(216,164,2)" fg:x="1533" fg:w="3"/><text x="52.5173%" y="350.50"></text></g><g><title>feed (lark/lexer.py:115) (3 samples, 0.10%)</title><rect x="53.4606%" y="356" width="0.1023%" height="15" fill="rgb(220,129,5)" fg:x="1568" fg:w="3"/><text x="53.7106%" y="366.50"></text></g><g><title>feed (lark/lexer.py:121) (8 samples, 0.27%)</title><rect x="53.6311%" y="356" width="0.2728%" height="15" fill="rgb(242,17,10)" fg:x="1573" fg:w="8"/><text x="53.8811%" y="366.50"></text></g><g><title>feed (lark/lexer.py:124) (10 samples, 0.34%)</title><rect x="54.0061%" y="356" width="0.3409%" height="15" fill="rgb(242,107,0)" fg:x="1584" fg:w="10"/><text x="54.2561%" y="366.50"></text></g><g><title>feed (lark/lexer.py:126) (24 samples, 0.82%)</title><rect x="54.3471%" y="356" width="0.8183%" height="15" fill="rgb(251,28,31)" fg:x="1594" fg:w="24"/><text x="54.5971%" y="366.50"></text></g><g><title>lex (lark/lexer.py:162) (97 samples, 3.31%)</title><rect x="52.4037%" y="340" width="3.3072%" height="15" fill="rgb(233,223,10)" fg:x="1537" fg:w="97"/><text x="52.6537%" y="350.50">lex..</text></g><g><title>feed (lark/lexer.py:127) (16 samples, 0.55%)</title><rect x="55.1654%" y="356" width="0.5455%" height="15" fill="rgb(215,21,27)" fg:x="1618" fg:w="16"/><text x="55.4154%" y="366.50"></text></g><g><title>lex (lark/lexer.py:163) (8 samples, 0.27%)</title><rect x="55.7109%" y="340" width="0.2728%" height="15" fill="rgb(232,23,21)" fg:x="1634" fg:w="8"/><text x="55.9609%" y="350.50"></text></g><g><title>lex (lark/lexer.py:164) (4 samples, 0.14%)</title><rect x="55.9836%" y="340" width="0.1364%" height="15" fill="rgb(244,5,23)" fg:x="1642" fg:w="4"/><text x="56.2336%" y="350.50"></text></g><g><title>lex (lark/lexer.py:165) (13 samples, 0.44%)</title><rect x="56.1200%" y="340" width="0.4432%" height="15" fill="rgb(226,81,46)" fg:x="1646" fg:w="13"/><text x="56.3700%" y="350.50"></text></g><g><title>lex (lark/lexer.py:335) (673 samples, 22.95%)</title><rect x="33.6516%" y="324" width="22.9458%" height="15" fill="rgb(247,70,30)" fg:x="987" fg:w="673"/><text x="33.9016%" y="334.50">lex (lark/lexer.py:335)</text></g><g><title>lex (lark/lexer.py:336) (6 samples, 0.20%)</title><rect x="56.5973%" y="324" width="0.2046%" height="15" fill="rgb(212,68,19)" fg:x="1660" fg:w="6"/><text x="56.8473%" y="334.50"></text></g><g><title>lex (lark/lexer.py:337) (18 samples, 0.61%)</title><rect x="56.8019%" y="324" width="0.6137%" height="15" fill="rgb(240,187,13)" fg:x="1666" fg:w="18"/><text x="57.0519%" y="334.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:68) (721 samples, 24.58%)</title><rect x="32.9697%" y="308" width="24.5823%" height="15" fill="rgb(223,113,26)" fg:x="967" fg:w="721"/><text x="33.2197%" y="318.50">parse (lark/parsers/lalr_parser.py:68)</text></g><g><title>lex (lark/lexer.py:338) (4 samples, 0.14%)</title><rect x="57.4156%" y="324" width="0.1364%" height="15" fill="rgb(206,192,2)" fg:x="1684" fg:w="4"/><text x="57.6656%" y="334.50"></text></g><g><title>get_action (lark/parsers/lalr_parser.py:43) (14 samples, 0.48%)</title><rect x="58.5407%" y="324" width="0.4773%" height="15" fill="rgb(241,108,4)" fg:x="1717" fg:w="14"/><text x="58.7907%" y="334.50"></text></g><g><title>get_action (lark/parsers/lalr_parser.py:44) (10 samples, 0.34%)</title><rect x="59.0181%" y="324" width="0.3409%" height="15" fill="rgb(247,173,49)" fg:x="1731" fg:w="10"/><text x="59.2681%" y="334.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:70) (113 samples, 3.85%)</title><rect x="57.5861%" y="308" width="3.8527%" height="15" fill="rgb(224,114,35)" fg:x="1689" fg:w="113"/><text x="57.8361%" y="318.50">pars..</text></g><g><title>get_action (lark/parsers/lalr_parser.py:46) (59 samples, 2.01%)</title><rect x="59.4272%" y="324" width="2.0116%" height="15" fill="rgb(245,159,27)" fg:x="1743" fg:w="59"/><text x="59.6772%" y="334.50">g..</text></g><g><title>__eq__ (lark/grammar.py:56) (5 samples, 0.17%)</title><rect x="63.8936%" y="324" width="0.1705%" height="15" fill="rgb(245,172,44)" fg:x="1874" fg:w="5"/><text x="64.1436%" y="334.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:71) (86 samples, 2.93%)</title><rect x="61.4388%" y="308" width="2.9322%" height="15" fill="rgb(236,23,11)" fg:x="1802" fg:w="86"/><text x="61.6888%" y="318.50">pa..</text></g><g><title>__eq__ (lark/grammar.py:57) (9 samples, 0.31%)</title><rect x="64.0641%" y="324" width="0.3069%" height="15" fill="rgb(205,117,38)" fg:x="1879" fg:w="9"/><text x="64.3141%" y="334.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:73) (14 samples, 0.48%)</title><rect x="64.3710%" y="308" width="0.4773%" height="15" fill="rgb(237,72,25)" fg:x="1888" fg:w="14"/><text x="64.6210%" y="318.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:74) (13 samples, 0.44%)</title><rect x="64.8483%" y="308" width="0.4432%" height="15" fill="rgb(244,70,9)" fg:x="1902" fg:w="13"/><text x="65.0983%" y="318.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:75) (10 samples, 0.34%)</title><rect x="65.2915%" y="308" width="0.3409%" height="15" fill="rgb(217,125,39)" fg:x="1915" fg:w="10"/><text x="65.5415%" y="318.50"></text></g><g><title>set_parser_state (lark/lexer.py:330) (5 samples, 0.17%)</title><rect x="66.1439%" y="324" width="0.1705%" height="15" fill="rgb(235,36,10)" fg:x="1940" fg:w="5"/><text x="66.3939%" y="334.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:76) (27 samples, 0.92%)</title><rect x="65.6325%" y="308" width="0.9206%" height="15" fill="rgb(251,123,47)" fg:x="1925" fg:w="27"/><text x="65.8825%" y="318.50"></text></g><g><title>set_parser_state (lark/lexer.py:331) (7 samples, 0.24%)</title><rect x="66.3144%" y="324" width="0.2387%" height="15" fill="rgb(221,13,13)" fg:x="1945" fg:w="7"/><text x="66.5644%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:51) (5 samples, 0.17%)</title><rect x="68.4964%" y="324" width="0.1705%" height="15" fill="rgb(238,131,9)" fg:x="2009" fg:w="5"/><text x="68.7464%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:52) (10 samples, 0.34%)</title><rect x="68.6669%" y="324" width="0.3409%" height="15" fill="rgb(211,50,8)" fg:x="2014" fg:w="10"/><text x="68.9169%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:53) (3 samples, 0.10%)</title><rect x="69.0078%" y="324" width="0.1023%" height="15" fill="rgb(245,182,24)" fg:x="2024" fg:w="3"/><text x="69.2578%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:54) (35 samples, 1.19%)</title><rect x="69.1101%" y="324" width="1.1933%" height="15" fill="rgb(242,14,37)" fg:x="2027" fg:w="35"/><text x="69.3601%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:55) (19 samples, 0.65%)</title><rect x="70.3034%" y="324" width="0.6478%" height="15" fill="rgb(246,228,12)" fg:x="2062" fg:w="19"/><text x="70.5534%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:56) (14 samples, 0.48%)</title><rect x="70.9512%" y="324" width="0.4773%" height="15" fill="rgb(213,55,15)" fg:x="2081" fg:w="14"/><text x="71.2012%" y="334.50"></text></g><g><title>__call__ (lark/parse_tree_builder.py:112) (13 samples, 0.44%)</title><rect x="74.7358%" y="340" width="0.4432%" height="15" fill="rgb(209,9,3)" fg:x="2192" fg:w="13"/><text x="74.9858%" y="350.50"></text></g><g><title>__call__ (lark/parse_tree_builder.py:119) (6 samples, 0.20%)</title><rect x="75.2472%" y="340" width="0.2046%" height="15" fill="rgb(230,59,30)" fg:x="2207" fg:w="6"/><text x="75.4972%" y="350.50"></text></g><g><title>header (syslog_rfc5424_parser/parser.py:100) (25 samples, 0.85%)</title><rect x="75.9291%" y="372" width="0.8524%" height="15" fill="rgb(209,121,21)" fg:x="2227" fg:w="25"/><text x="76.1791%" y="382.50"></text></g><g><title>&lt;lambda&gt; (&lt;string&gt;:1) (9 samples, 0.31%)</title><rect x="76.4746%" y="388" width="0.3069%" height="15" fill="rgb(220,109,13)" fg:x="2243" fg:w="9"/><text x="76.7246%" y="398.50"></text></g><g><title>__call__ (lark/parse_tree_builder.py:18) (30 samples, 1.02%)</title><rect x="75.8950%" y="356" width="1.0228%" height="15" fill="rgb(232,18,1)" fg:x="2226" fg:w="30"/><text x="76.1450%" y="366.50"></text></g><g><title>__call__ (lark/parse_tree_builder.py:121) (52 samples, 1.77%)</title><rect x="75.4518%" y="340" width="1.7729%" height="15" fill="rgb(215,41,42)" fg:x="2213" fg:w="52"/><text x="75.7018%" y="350.50">_..</text></g><g><title>pri (syslog_rfc5424_parser/parser.py:54) (8 samples, 0.27%)</title><rect x="76.9519%" y="356" width="0.2728%" height="15" fill="rgb(224,123,36)" fg:x="2257" fg:w="8"/><text x="77.2019%" y="366.50"></text></g><g><title>__hash__ (lark/grammar.py:14) (18 samples, 0.61%)</title><rect x="79.9182%" y="356" width="0.6137%" height="15" fill="rgb(240,125,3)" fg:x="2344" fg:w="18"/><text x="80.1682%" y="366.50"></text></g><g><title>__hash__ (lark/grammar.py:55) (138 samples, 4.71%)</title><rect x="77.2247%" y="340" width="4.7051%" height="15" fill="rgb(205,98,50)" fg:x="2265" fg:w="138"/><text x="77.4747%" y="350.50">__has..</text></g><g><title>__hash__ (lark/grammar.py:15) (41 samples, 1.40%)</title><rect x="80.5319%" y="356" width="1.3979%" height="15" fill="rgb(205,185,37)" fg:x="2362" fg:w="41"/><text x="80.7819%" y="366.50"></text></g><g><title>procid (syslog_rfc5424_parser/parser.py:76) (8 samples, 0.27%)</title><rect x="82.1343%" y="340" width="0.2728%" height="15" fill="rgb(238,207,15)" fg:x="2409" fg:w="8"/><text x="82.3843%" y="350.50"></text></g><g><title>__eq__ (lark/lexer.py:102) (11 samples, 0.38%)</title><rect x="82.5094%" y="356" width="0.3750%" height="15" fill="rgb(213,199,42)" fg:x="2420" fg:w="11"/><text x="82.7594%" y="366.50"></text></g><g><title>structured_data (syslog_rfc5424_parser/parser.py:83) (16 samples, 0.55%)</title><rect x="82.4071%" y="340" width="0.5455%" height="15" fill="rgb(235,201,11)" fg:x="2417" fg:w="16"/><text x="82.6571%" y="350.50"></text></g><g><title>timestamp (syslog_rfc5424_parser/parser.py:64) (9 samples, 0.31%)</title><rect x="83.0549%" y="340" width="0.3069%" height="15" fill="rgb(207,46,11)" fg:x="2436" fg:w="9"/><text x="83.3049%" y="350.50"></text></g><g><title>timestamp (syslog_rfc5424_parser/parser.py:65) (5 samples, 0.17%)</title><rect x="83.3617%" y="340" width="0.1705%" height="15" fill="rgb(241,35,35)" fg:x="2445" fg:w="5"/><text x="83.6117%" y="350.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:60) (359 samples, 12.24%)</title><rect x="71.4286%" y="324" width="12.2400%" height="15" fill="rgb(243,32,47)" fg:x="2095" fg:w="359"/><text x="71.6786%" y="334.50">reduce (lark/parse..</text></g><g><title>version (syslog_rfc5424_parser/parser.py:57) (4 samples, 0.14%)</title><rect x="83.5322%" y="340" width="0.1364%" height="15" fill="rgb(247,202,23)" fg:x="2450" fg:w="4"/><text x="83.7822%" y="350.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:62) (33 samples, 1.13%)</title><rect x="83.6686%" y="324" width="1.1251%" height="15" fill="rgb(219,102,11)" fg:x="2454" fg:w="33"/><text x="83.9186%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:63) (4 samples, 0.14%)</title><rect x="84.7937%" y="324" width="0.1364%" height="15" fill="rgb(243,110,44)" fg:x="2487" fg:w="4"/><text x="85.0437%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:64) (4 samples, 0.14%)</title><rect x="84.9301%" y="324" width="0.1364%" height="15" fill="rgb(222,74,54)" fg:x="2491" fg:w="4"/><text x="85.1801%" y="334.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:79) (545 samples, 18.58%)</title><rect x="66.5871%" y="308" width="18.5817%" height="15" fill="rgb(216,99,12)" fg:x="1953" fg:w="545"/><text x="66.8371%" y="318.50">parse (lark/parsers/lalr_pars..</text></g><g><title>reduce (lark/parsers/lalr_parser.py:65) (3 samples, 0.10%)</title><rect x="85.0665%" y="324" width="0.1023%" height="15" fill="rgb(226,22,26)" fg:x="2495" fg:w="3"/><text x="85.3165%" y="334.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:81) (22 samples, 0.75%)</title><rect x="85.1688%" y="308" width="0.7501%" height="15" fill="rgb(217,163,10)" fg:x="2498" fg:w="22"/><text x="85.4188%" y="318.50"></text></g><g><title>new_borrow_pos (lark/lexer.py:87) (15 samples, 0.51%)</title><rect x="85.4074%" y="324" width="0.5114%" height="15" fill="rgb(213,25,53)" fg:x="2505" fg:w="15"/><text x="85.6574%" y="334.50"></text></g><g><title>__new__ (lark/lexer.py:75) (4 samples, 0.14%)</title><rect x="85.7825%" y="340" width="0.1364%" height="15" fill="rgb(252,105,26)" fg:x="2516" fg:w="4"/><text x="86.0325%" y="350.50"></text></g><g><title>get_action (lark/parsers/lalr_parser.py:43) (3 samples, 0.10%)</title><rect x="86.0893%" y="324" width="0.1023%" height="15" fill="rgb(220,39,43)" fg:x="2525" fg:w="3"/><text x="86.3393%" y="334.50"></text></g><g><title>get_action (lark/parsers/lalr_parser.py:44) (3 samples, 0.10%)</title><rect x="86.1916%" y="324" width="0.1023%" height="15" fill="rgb(229,68,48)" fg:x="2528" fg:w="3"/><text x="86.4416%" y="334.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:83) (14 samples, 0.48%)</title><rect x="85.9189%" y="308" width="0.4773%" height="15" fill="rgb(252,8,32)" fg:x="2520" fg:w="14"/><text x="86.1689%" y="318.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:54) (6 samples, 0.20%)</title><rect x="86.7371%" y="324" width="0.2046%" height="15" fill="rgb(223,20,43)" fg:x="2544" fg:w="6"/><text x="86.9871%" y="334.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:55) (4 samples, 0.14%)</title><rect x="86.9417%" y="324" width="0.1364%" height="15" fill="rgb(229,81,49)" fg:x="2550" fg:w="4"/><text x="87.1917%" y="334.50"></text></g><g><title>__call__ (lark/parse_tree_builder.py:121) (28 samples, 0.95%)</title><rect x="87.5554%" y="340" width="0.9547%" height="15" fill="rgb(236,28,36)" fg:x="2568" fg:w="28"/><text x="87.8054%" y="350.50"></text></g><g><title>__call__ (lark/parse_tree_builder.py:18) (25 samples, 0.85%)</title><rect x="87.6577%" y="356" width="0.8524%" height="15" fill="rgb(249,185,26)" fg:x="2571" fg:w="25"/><text x="87.9077%" y="366.50"></text></g><g><title>start (syslog_rfc5424_parser/parser.py:115) (22 samples, 0.75%)</title><rect x="87.7600%" y="372" width="0.7501%" height="15" fill="rgb(249,174,33)" fg:x="2574" fg:w="22"/><text x="88.0100%" y="382.50"></text></g><g><title>&lt;lambda&gt; (&lt;string&gt;:1) (9 samples, 0.31%)</title><rect x="88.2032%" y="388" width="0.3069%" height="15" fill="rgb(233,201,37)" fg:x="2587" fg:w="9"/><text x="88.4532%" y="398.50"></text></g><g><title>__hash__ (lark/grammar.py:55) (18 samples, 0.61%)</title><rect x="88.5101%" y="340" width="0.6137%" height="15" fill="rgb(221,78,26)" fg:x="2596" fg:w="18"/><text x="88.7601%" y="350.50"></text></g><g><title>__hash__ (lark/grammar.py:15) (7 samples, 0.24%)</title><rect x="88.8851%" y="356" width="0.2387%" height="15" fill="rgb(250,127,30)" fg:x="2607" fg:w="7"/><text x="89.1351%" y="366.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:60) (64 samples, 2.18%)</title><rect x="87.1463%" y="324" width="2.1821%" height="15" fill="rgb(230,49,44)" fg:x="2556" fg:w="64"/><text x="87.3963%" y="334.50">r..</text></g><g><title>msg (syslog_rfc5424_parser/parser.py:97) (6 samples, 0.20%)</title><rect x="89.1238%" y="340" width="0.2046%" height="15" fill="rgb(229,67,23)" fg:x="2614" fg:w="6"/><text x="89.3738%" y="350.50"></text></g><g><title>reduce (lark/parsers/lalr_parser.py:62) (9 samples, 0.31%)</title><rect x="89.3283%" y="324" width="0.3069%" height="15" fill="rgb(249,83,47)" fg:x="2620" fg:w="9"/><text x="89.5783%" y="334.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:78) (1,728 samples, 58.92%)</title><rect x="30.8217%" y="244" width="58.9158%" height="15" fill="rgb(215,43,3)" fg:x="904" fg:w="1728"/><text x="31.0717%" y="254.50">parse (syslog_rfc5424_parser/message.py:78)</text></g><g><title>parse (syslog_rfc5424_parser/parser.py:126) (1,727 samples, 58.88%)</title><rect x="30.8558%" y="260" width="58.8817%" height="15" fill="rgb(238,154,13)" fg:x="905" fg:w="1727"/><text x="31.1058%" y="270.50">parse (syslog_rfc5424_parser/parser.py:126)</text></g><g><title>parse (lark/lark.py:228) (1,725 samples, 58.81%)</title><rect x="30.9240%" y="276" width="58.8135%" height="15" fill="rgb(219,56,2)" fg:x="907" fg:w="1725"/><text x="31.1740%" y="286.50">parse (lark/lark.py:228)</text></g><g><title>parse (lark/parser_frontends.py:38) (1,710 samples, 58.30%)</title><rect x="31.4354%" y="292" width="58.3021%" height="15" fill="rgb(233,0,4)" fg:x="922" fg:w="1710"/><text x="31.6854%" y="302.50">parse (lark/parser_frontends.py:38)</text></g><g><title>parse (lark/parsers/lalr_parser.py:89) (95 samples, 3.24%)</title><rect x="86.4985%" y="308" width="3.2390%" height="15" fill="rgb(235,30,7)" fg:x="2537" fg:w="95"/><text x="86.7485%" y="318.50">par..</text></g><g><title>parse (syslog_rfc5424_parser/message.py:82) (4 samples, 0.14%)</title><rect x="89.8057%" y="244" width="0.1364%" height="15" fill="rgb(250,79,13)" fg:x="2634" fg:w="4"/><text x="90.0557%" y="254.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:84) (3 samples, 0.10%)</title><rect x="90.0102%" y="244" width="0.1023%" height="15" fill="rgb(211,146,34)" fg:x="2640" fg:w="3"/><text x="90.2602%" y="254.50"></text></g><g><title>__call__ (enum.py:753) (4 samples, 0.14%)</title><rect x="90.3512%" y="260" width="0.1364%" height="15" fill="rgb(228,22,38)" fg:x="2650" fg:w="4"/><text x="90.6012%" y="270.50"></text></g><g><title>__new__ (enum.py:1133) (4 samples, 0.14%)</title><rect x="90.5217%" y="276" width="0.1364%" height="15" fill="rgb(235,168,5)" fg:x="2655" fg:w="4"/><text x="90.7717%" y="286.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:85) (17 samples, 0.58%)</title><rect x="90.1125%" y="244" width="0.5796%" height="15" fill="rgb(221,155,16)" fg:x="2643" fg:w="17"/><text x="90.3625%" y="254.50"></text></g><g><title>__call__ (enum.py:757) (6 samples, 0.20%)</title><rect x="90.4876%" y="260" width="0.2046%" height="15" fill="rgb(215,215,53)" fg:x="2654" fg:w="6"/><text x="90.7376%" y="270.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:87) (12 samples, 0.41%)</title><rect x="90.7262%" y="244" width="0.4091%" height="15" fill="rgb(223,4,10)" fg:x="2661" fg:w="12"/><text x="90.9762%" y="254.50"></text></g><g><title>__call__ (enum.py:757) (6 samples, 0.20%)</title><rect x="90.9308%" y="260" width="0.2046%" height="15" fill="rgb(234,103,6)" fg:x="2667" fg:w="6"/><text x="91.1808%" y="270.50"></text></g><g><title>__new__ (enum.py:1139) (4 samples, 0.14%)</title><rect x="90.9990%" y="276" width="0.1364%" height="15" fill="rgb(227,97,0)" fg:x="2669" fg:w="4"/><text x="91.2490%" y="286.50"></text></g><g><title>parse (syslog_rfc5424_parser/message.py:92) (3 samples, 0.10%)</title><rect x="91.2376%" y="244" width="0.1023%" height="15" fill="rgb(234,150,53)" fg:x="2676" fg:w="3"/><text x="91.4876%" y="254.50"></text></g><g><title>handler (shnek/main.py:32) (1,832 samples, 62.46%)</title><rect x="28.9806%" y="228" width="62.4616%" height="15" fill="rgb(228,201,54)" fg:x="850" fg:w="1832"/><text x="29.2306%" y="238.50">handler (shnek/main.py:32)</text></g><g><title>&lt;genexpr&gt; (syslog_rfc5424_parser/message.py:118) (10 samples, 0.34%)</title><rect x="93.4538%" y="260" width="0.3409%" height="15" fill="rgb(222,22,37)" fg:x="2741" fg:w="10"/><text x="93.7038%" y="270.50"></text></g><g><title>__get__ (enum.py:210) (3 samples, 0.10%)</title><rect x="95.0563%" y="276" width="0.1023%" height="15" fill="rgb(237,53,32)" fg:x="2788" fg:w="3"/><text x="95.3063%" y="286.50"></text></g><g><title>&lt;genexpr&gt; (syslog_rfc5424_parser/message.py:119) (45 samples, 1.53%)</title><rect x="93.7947%" y="260" width="1.5343%" height="15" fill="rgb(233,25,53)" fg:x="2751" fg:w="45"/><text x="94.0447%" y="270.50"></text></g><g><title>__get__ (enum.py:212) (5 samples, 0.17%)</title><rect x="95.1585%" y="276" width="0.1705%" height="15" fill="rgb(210,40,34)" fg:x="2791" fg:w="5"/><text x="95.4085%" y="286.50"></text></g><g><title>name (enum.py:1290) (3 samples, 0.10%)</title><rect x="95.2267%" y="292" width="0.1023%" height="15" fill="rgb(241,220,44)" fg:x="2793" fg:w="3"/><text x="95.4767%" y="302.50"></text></g><g><title>as_dict (syslog_rfc5424_parser/message.py:118) (85 samples, 2.90%)</title><rect x="92.4991%" y="244" width="2.8981%" height="15" fill="rgb(235,28,35)" fg:x="2713" fg:w="85"/><text x="92.7491%" y="254.50">as..</text></g><g><title>publish (nats/aio/client.py:857) (3 samples, 0.10%)</title><rect x="95.4995%" y="244" width="0.1023%" height="15" fill="rgb(210,56,17)" fg:x="2801" fg:w="3"/><text x="95.7495%" y="254.50"></text></g><g><title>publish (nats/aio/client.py:859) (3 samples, 0.10%)</title><rect x="95.6359%" y="244" width="0.1023%" height="15" fill="rgb(224,130,29)" fg:x="2805" fg:w="3"/><text x="95.8859%" y="254.50"></text></g><g><title>publish (nats/aio/client.py:862) (3 samples, 0.10%)</title><rect x="95.7382%" y="244" width="0.1023%" height="15" fill="rgb(235,212,8)" fg:x="2808" fg:w="3"/><text x="95.9882%" y="254.50"></text></g><g><title>_send_publish (nats/aio/client.py:875) (3 samples, 0.10%)</title><rect x="96.0791%" y="260" width="0.1023%" height="15" fill="rgb(223,33,50)" fg:x="2818" fg:w="3"/><text x="96.3291%" y="270.50"></text></g><g><title>pub_cmd (nats/protocol/command.py:15) (11 samples, 0.38%)</title><rect x="96.4200%" y="276" width="0.3750%" height="15" fill="rgb(219,149,13)" fg:x="2828" fg:w="11"/><text x="96.6700%" y="286.50"></text></g><g><title>_send_publish (nats/aio/client.py:892) (22 samples, 0.75%)</title><rect x="96.2837%" y="260" width="0.7501%" height="15" fill="rgb(250,156,29)" fg:x="2824" fg:w="22"/><text x="96.5337%" y="270.50"></text></g><g><title>pub_cmd (nats/protocol/command.py:16) (7 samples, 0.24%)</title><rect x="96.7951%" y="276" width="0.2387%" height="15" fill="rgb(216,193,19)" fg:x="2839" fg:w="7"/><text x="97.0451%" y="286.50"></text></g><g><title>_send_publish (nats/aio/client.py:910) (12 samples, 0.41%)</title><rect x="97.0338%" y="260" width="0.4091%" height="15" fill="rgb(216,135,14)" fg:x="2846" fg:w="12"/><text x="97.2838%" y="270.50"></text></g><g><title>_send_command (nats/aio/client.py:1235) (4 samples, 0.14%)</title><rect x="97.7838%" y="276" width="0.1364%" height="15" fill="rgb(241,47,5)" fg:x="2868" fg:w="4"/><text x="98.0338%" y="286.50"></text></g><g><title>_send_publish (nats/aio/client.py:912) (14 samples, 0.48%)</title><rect x="97.4770%" y="260" width="0.4773%" height="15" fill="rgb(233,42,35)" fg:x="2859" fg:w="14"/><text x="97.7270%" y="270.50"></text></g><g><title>_send_publish (nats/aio/client.py:913) (4 samples, 0.14%)</title><rect x="97.9543%" y="260" width="0.1364%" height="15" fill="rgb(231,13,6)" fg:x="2873" fg:w="4"/><text x="98.2043%" y="270.50"></text></g><g><title>_flush_pending (nats/aio/client.py:1246) (5 samples, 0.17%)</title><rect x="98.1589%" y="276" width="0.1705%" height="15" fill="rgb(207,181,40)" fg:x="2879" fg:w="5"/><text x="98.4089%" y="286.50"></text></g><g><title>put (asyncio/queues.py:116) (4 samples, 0.14%)</title><rect x="98.5680%" y="292" width="0.1364%" height="15" fill="rgb(254,173,49)" fg:x="2891" fg:w="4"/><text x="98.8180%" y="302.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:61) (3 samples, 0.10%)</title><rect x="99.0113%" y="324" width="0.1023%" height="15" fill="rgb(221,1,38)" fg:x="2904" fg:w="3"/><text x="99.2613%" y="334.50"></text></g><g><title>_call_soon (asyncio/base_events.py:815) (7 samples, 0.24%)</title><rect x="99.5568%" y="356" width="0.2387%" height="15" fill="rgb(206,124,46)" fg:x="2920" fg:w="7"/><text x="99.8068%" y="366.50"></text></g><g><title>_flush_pending (nats/aio/client.py:1252) (42 samples, 1.43%)</title><rect x="98.3975%" y="276" width="1.4320%" height="15" fill="rgb(249,21,11)" fg:x="2886" fg:w="42"/><text x="98.6475%" y="286.50"></text></g><g><title>put (asyncio/queues.py:135) (33 samples, 1.13%)</title><rect x="98.7044%" y="292" width="1.1251%" height="15" fill="rgb(222,201,40)" fg:x="2895" fg:w="33"/><text x="98.9544%" y="302.50"></text></g><g><title>put_nowait (asyncio/queues.py:147) (26 samples, 0.89%)</title><rect x="98.9431%" y="308" width="0.8865%" height="15" fill="rgb(235,61,29)" fg:x="2902" fg:w="26"/><text x="99.1931%" y="318.50"></text></g><g><title>_wakeup_next (asyncio/queues.py:63) (19 samples, 0.65%)</title><rect x="99.1817%" y="324" width="0.6478%" height="15" fill="rgb(219,207,3)" fg:x="2909" fg:w="19"/><text x="99.4317%" y="334.50"></text></g><g><title>call_soon (asyncio/base_events.py:799) (11 samples, 0.38%)</title><rect x="99.4545%" y="340" width="0.3750%" height="15" fill="rgb(222,56,46)" fg:x="2917" fg:w="11"/><text x="99.7045%" y="350.50"></text></g><g><title>_run_once (asyncio/base_events.py:1986) (2,859 samples, 97.48%)</title><rect x="2.3866%" y="196" width="97.4770%" height="15" fill="rgb(239,76,54)" fg:x="70" fg:w="2859"/><text x="2.6366%" y="206.50">_run_once (asyncio/base_events.py:1986)</text></g><g><title>_run (asyncio/events.py:88) (2,854 samples, 97.31%)</title><rect x="2.5571%" y="212" width="97.3065%" height="15" fill="rgb(231,124,27)" fg:x="75" fg:w="2854"/><text x="2.8071%" y="222.50">_run (asyncio/events.py:88)</text></g><g><title>handler (shnek/main.py:33) (247 samples, 8.42%)</title><rect x="91.4422%" y="228" width="8.4214%" height="15" fill="rgb(249,195,6)" fg:x="2682" fg:w="247"/><text x="91.6922%" y="238.50">handler (shn..</text></g><g><title>publish (nats/aio/client.py:871) (115 samples, 3.92%)</title><rect x="95.9427%" y="244" width="3.9209%" height="15" fill="rgb(237,174,47)" fg:x="2814" fg:w="115"/><text x="96.1927%" y="254.50">publ..</text></g><g><title>_send_publish (nats/aio/client.py:914) (52 samples, 1.77%)</title><rect x="98.0907%" y="260" width="1.7729%" height="15" fill="rgb(206,201,31)" fg:x="2877" fg:w="52"/><text x="98.3407%" y="270.50">_..</text></g><g><title>_run_module_as_main (&lt;frozen runpy&gt;:198) (2,921 samples, 99.59%)</title><rect x="0.3750%" y="68" width="99.5909%" height="15" fill="rgb(231,57,52)" fg:x="11" fg:w="2921"/><text x="0.6250%" y="78.50">_run_module_as_main (&lt;frozen runpy&gt;:198)</text></g><g><title>_run_code (&lt;frozen runpy&gt;:88) (2,921 samples, 99.59%)</title><rect x="0.3750%" y="84" width="99.5909%" height="15" fill="rgb(248,177,22)" fg:x="11" fg:w="2921"/><text x="0.6250%" y="94.50">_run_code (&lt;frozen runpy&gt;:88)</text></g><g><title>&lt;module&gt; (shnek/__main__.py:4) (2,921 samples, 99.59%)</title><rect x="0.3750%" y="100" width="99.5909%" height="15" fill="rgb(215,211,37)" fg:x="11" fg:w="2921"/><text x="0.6250%" y="110.50">&lt;module&gt; (shnek/__main__.py:4)</text></g><g><title>main (shnek/main.py:11) (2,921 samples, 99.59%)</title><rect x="0.3750%" y="116" width="99.5909%" height="15" fill="rgb(241,128,51)" fg:x="11" fg:w="2921"/><text x="0.6250%" y="126.50">main (shnek/main.py:11)</text></g><g><title>run (asyncio/runners.py:194) (2,921 samples, 99.59%)</title><rect x="0.3750%" y="132" width="99.5909%" height="15" fill="rgb(227,165,31)" fg:x="11" fg:w="2921"/><text x="0.6250%" y="142.50">run (asyncio/runners.py:194)</text></g><g><title>run (asyncio/runners.py:118) (2,921 samples, 99.59%)</title><rect x="0.3750%" y="148" width="99.5909%" height="15" fill="rgb(228,167,24)" fg:x="11" fg:w="2921"/><text x="0.6250%" y="158.50">run (asyncio/runners.py:118)</text></g><g><title>run_until_complete (asyncio/base_events.py:674) (2,921 samples, 99.59%)</title><rect x="0.3750%" y="164" width="99.5909%" height="15" fill="rgb(228,143,12)" fg:x="11" fg:w="2921"/><text x="0.6250%" y="174.50">run_until_complete (asyncio/base_events.py:674)</text></g><g><title>run_forever (asyncio/base_events.py:641) (2,921 samples, 99.59%)</title><rect x="0.3750%" y="180" width="99.5909%" height="15" fill="rgb(249,149,8)" fg:x="11" fg:w="2921"/><text x="0.6250%" y="190.50">run_forever (asyncio/base_events.py:641)</text></g><g><title>_run_once (asyncio/base_events.py:1987) (3 samples, 0.10%)</title><rect x="99.8636%" y="196" width="0.1023%" height="15" fill="rgb(243,35,44)" fg:x="2929" fg:w="3"/><text x="100.1136%" y="206.50"></text></g><g><title>all (2,933 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(246,89,9)" fg:x="0" fg:w="2933"/><text x="0.2500%" y="62.50"></text></g></svg></svg>